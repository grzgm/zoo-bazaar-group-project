@page
@Html.AntiForgeryToken()
@using ZooBazaar_DomainModels.Models;
@model ZooBazaar_Desktop_App.Pages.ManualScheduleModel
@{
    ViewData["Title"] = "Schedule";
    ViewData["TabName"] = "Schedule";
    ViewData["Css"] = "~/css/ManualSchedule.css";
}
@section Scripts {
    <script>

        function AddEmployee(i, j, day, month, year, taskID, timeblockID, amountOfEmployes, amountOfNeededEmployees) {
            $.ajax({
                url: 'ManualSchedule/?handler=AddEmployee',
                method: 'POST',
                dataType: 'json',
                data: {
                    employeeID: $("#employeeSlection option:selected").val(),
                    day: day,
                    month: month,
                    year: year,
                    taskID: taskID,
                    timeblockID: timeblockID,
                    amountOfEmployees: amountOfEmployes,
                    amountOfNeededEmployees: amountOfNeededEmployees,
                },
                headers: {
                    RequestVerificationToken:
                        $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (result) {
                    if (result.amountOfEmployees == "full") {
                        alert("Employee is alredy added or There are enough Employees or Eployee is not avalible");
                    }else{
                        $("#amoutOfEmployees-" + i + "-" + j).text(result.amountOfEmployees);
                    }   
                }               
            });
        }

        $(document).bind("mousedown", function (e) {

            if (!$(e.target).parents(".custom-menu").length > 0) {

                $(".custom-menu").hide(100);

            }
            if (!$(e.target).parents(".custom-menuEmployee").length > 0) {

                $(".custom-menuEmployee").hide(100);

            }

        });

        function GetEmployees(i, j, day, month, year, taskID, timeblockID) {
             return new Promise((resolve, reject) => {
                $.ajax({
                    url: 'ManualSchedule/?handler=GetEmployeesOfTask',
                    method: 'GET',
                    dataType: 'json',
                    data: {
                        day: day,
                        month: month,
                        year: year,
                        taskID: taskID,
                        timeblockID: timeblockID,
                    },
                    success: function (data) {
                        var text ="";
                        for (var k = 0; k < data.employees.length; k++) {
                            text = text + 
                            "<li id="+"employee-"+data.employees[k].id + "-" + i + "-" + j +" onclick="+"SubMenu("+ i +","+ j +","+ data.employees[k].id +")><div> "+ data.employees[k].firstName+" "+data.employees[k].lastName+ "</div>"+
                                "<ul class = " + "custom-menuEmployee" + " id=" + "sublistEmployee-" + data.employees[k].id + "-" + i + "-" + j + " > <li><button onclick=" + "DeleteEmployee(" + i + "," + j + "," + data.employees[k].id + "," + day + "," + month + "," + year + "," + taskID + "," + timeblockID + ")" + ">Delete</button></li> </ul>" +
                            "</li>";
                        };
                        
                        resolve(text);
                    },
                    error: function (error) {
                        reject(error)
                    },
                });
              });
                

        }

        function ContextMenu(i, j, day, month, year, taskID, timeblockID) {
            event.preventDefault();
                $("#contextmenu-" + i + "-" + j).finish().toggle(100).
                css({
                    top: event.pageY + "px",
                    left: event.pageX + "px"
                });

            GetEmployees(i, j, day, month, year, taskID, timeblockID).then((text) => {
                $("#contextmenu-" + i + "-" + j).html(text);
            });      
        }

        function SubMenu(i, j, empID) {

            var x = $("#employee-" + empID + "-" + i + "-" + j).width();
            var p = $("#employee-" + empID + "-" + i + "-" + j).position();
        

            event.preventDefault();
            $("#sublistEmployee-" + empID + "-" +i+"-"+j).finish().toggle(100).
                css({
                    left: x + 25 + "px",
                    top: p.top + "px",
                    
              });
 
        }
        function DeleteEmployee(i, j, empID, day, month, year, taskID, timeblockID) {
            $.ajax({
                url: 'ManualSchedule/?handler=RemoveEmployee',
                method: 'POST',
                dataType: 'json',
                data: {
                    employeeID: empID,
                    day: day,
                    month: month,
                    year: year,
                    taskID: taskID,
                    timeblockID: timeblockID,
                },
                headers: {
                    RequestVerificationToken:
                        $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                success: function (result) {

                    $("#amoutOfEmployees-" + i + "-" + j).text(result.amountOfEmployees);

                    $("#contextmenu-" + i + "-" + j).empty()
                    $(".custom-menu").hide(100);
                    $(".custom-menuEmployee").hide(100);                    
                }
            });
        }

        function FadeOut(){
            $("#container").fadeOut();
        }



    </script>
}
<div id="container">
    <div class="navigation">
        <form method="post">
            <button asp-page-handler="previous">&#60;</button>
            <button asp-page-handler="today">Today</button>
            <button asp-page-handler="next">></button>
        </form>

    </div>
    <div class="weekDays">
        @for (int i = 0; i < 7; i++)
        {
            <div>@Model.namesOfDaysOfWeek[i] <br>
                @Model.datesOfWeek[i]</div>
        }
    </div>
    <div class="schedule">
        
        @{
            <div>
                @{
                    for (int i = Model.startingHour; i <= Model.closingHour; i++)
                    {
                        <div class="hour">@(i):00 </div>
                    }
                }
            </div>
            for (int i = 0; i < 7; i++)
            {
                <div class="day">
                    @{
                        for (int j = Model.startingHour; j <= Model.closingHour; j++)
                        {
                            if (Model.schedule[i][j] != null && Model.schedule[i][j].timeBlockId == j)
                            {
                               
                                var block = Model.Blocks.Find(x => x.blockSchedule == Model.schedule[i][j]);
                                
                                <ul class='custom-menu' id="contextmenu-@i-@j">
                                    
                                </ul>


                                <button id="block-@i-@j" oncontextmenu="ContextMenu(@i,@j,@block.date.Day, @block.date.Month, @block.date.Year, @Model.schedule[i][j].TaskID,@Model.schedule[i][j].timeBlockId) " onclick="AddEmployee(@i,@j,@block.date.Day, @block.date.Month, @block.date.Year, @Model.schedule[i][j].TaskID,@Model.schedule[i][j].timeBlockId, @block.amountOfEmployes, @Model.schedule[i][j].EmployeesNeeded)" class="timeBlock">@Model.schedule[i][j].taskName - @Model.schedule[i][j].taskHabitat - <p id="amoutOfEmployees-@i-@j" style="font-size: 15px; display: inline;"> @block.amountOfEmployes</p>/@Model.schedule[i][j].EmployeesNeeded</button>
                            }
                            else
                            {
                                <button asp-route-weekDay="@i" asp-route-timeBlock="@j" class="timeBlock"></button>
                            }
                        }
                    }
                </div>
            }
        }

    </div>
    <div class="actionPanel">
        <label type="text">Employee:</label>
        <select required asp-for="@Model.employeeID" asp-items=@Model.Employees id="employeeSlection"></select>
        <form asp-page-handler="automate" method="post">
            <button onclick="FadeOut()" class="btn btn-default">Devide work</button>
        </form>
    </div>
</div>