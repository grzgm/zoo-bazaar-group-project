@page
@using ZooBazaar_DomainModels.Models;
@model ZooBazaar_Desktop_App.Pages.EmployeeListModel
@{
    ViewData["Title"] = "Employee List";
    ViewData["TabName"] = "Employee List";

    ViewData["Css"] = "~/css/employeeLists.css";
}
<div id="container">
    <div class="navigation">
        <form class="searchingForm" method="post">
            <input asp-for="Name" type="text" />
            <button asp-page-handler="Name" type="submit">Search</button>
            <input asp-for="LastName" type="text" />
            <button asp-page-handler="LastName" type="submit">Search</button>
        </form>

    </div>
    <div class="sortingMenu column">
        <div class="sortOption ID">
            ID
        </div>
        <div class="sortOption Name">
            Name
        </div>
        <div class="sortOption LastName">
            Last Name
        </div>
    </div>
    <div class="list">
        @{
            foreach (Employee employee in Model._employees)
            {
                <div class="entity column">
                    <div class="entityName">
                        @employee.ID
                    </div>
                    <div class="entityName">
                        @employee.FirstName
                    </div>
                    <div class="entityLastName">
                        @employee.LastName
                        <a type="button" asp-page="./EmployeeDetails" asp-route-postId="@employee.ID" class="editBtn"> . . .</a>
                    </div>

                </div>
            }
        }
    </div>
    <div class="actionPanel">
        <a type="button" asp-page="./EmployeeAdd" class="editBtn"> ADD</a>
    </div>
</div>


<script>

    function sortEntity (column) {
        // Checking if sorting the same column and if change sorting order
        if (sortedColumn == column) {
            sortingFactor *= -1;
        }
        else {
            sortedColumn = column;
            sortingFactor = 1;
        }
        // NodeList of all animals divs
        let entities = document.querySelectorAll('.entity');
        // Array of all animals divs
        let entitiesArray = Array.prototype.slice.call(entities, 0);
        // Sorting array by celected column
        entitiesArray.sort((a, b) => (a.children[column].innerHTML > b.children[column].innerHTML ? 1 * sortingFactor : -1 * sortingFactor));
        // Clear animals list and populate it with sorted animals
        let list = document.querySelector('.list');
        list.textContent = '';

        for (let i = 0; i < entities.length; i++) {
            list.appendChild(entitiesArray[i]);
        }
    }

    let sortedColumn = -1;
    let sortingFactor = 1;

    document.querySelectorAll('.sortOption').forEach(item => {
        item.addEventListener('click', event => {
            sortEntity (Array.from(item.parentNode.children).indexOf(item));
        });
    })

</script>